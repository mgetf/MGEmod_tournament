name: Build and Release on Commit
# modified from https://github.com/nosoop/NinjaBuild-SMPlugin/blob/master/contrib/github-workflow/build-on-version-tag-push.yml

on:
  push:
    branches:
      - '*' # Triggers on pushes to any branch
      # To avoid loops where a tag pushed by the release action re-triggers the workflow,
      # we are removing the direct trigger on tags. The release action will create the tag.
    # tags:
    #  - 'v*'

jobs:
  run:
    name: Build and Release
    runs-on: ubuntu-latest

    if: "!contains(github.event.head_commit.message, '[ci skip]') && !startsWith(github.ref, 'refs/tags/')" # Also skip if the trigger was a tag push, to prevent loops

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
        fetch-depth: 0 # Required to get commit count for versioning

    - name: Setup SourcePawn Compiler
      uses: rumblefrog/setup-sp@master
      with:
        version: "1.12.x"

    - name: Compile plugins
      run: |
        pwd
        spcomp -i"./addons/sourcemod/scripting/include/" addons/sourcemod/scripting/ladder.sp -o ./addons/sourcemod/plugins/ladder.smx
        ls -la


    - name: Zip packages
      run: |
        mkdir build
        7za a -r build/ladder.zip addons/
        ls -la
        pwd

    - name: Generate version string
      id: version
      run: |
        # This creates a version like v0.123.0 where 123 is the total commit count
        echo "TAG_NAME=v0.$(git rev-list --count HEAD).0" >> $GITHUB_OUTPUT

    - name: Upload mge.zip artifact
      uses: actions/upload-artifact@v4
      with:
        name: ladder-package-${{ steps.version.outputs.TAG_NAME }}
        path: build/ladder.zip

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.version.outputs.TAG_NAME }}
        name: "Release ${{ steps.version.outputs.TAG_NAME }}"
        files: |
          ./build/ladder.zip
        fail_on_unmatched_files: true
        generate_release_notes: true
        prerelease: true # Mark these automated commit-based releases as pre-releases
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
